name: CI Pipeline - Liquibase, Tests, Health Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-test-liquibase:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: customer_order_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Harsha@123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/customer_order_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Harsha@123

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 && echo "Postgres is ready!" && break
            echo "Postgres not ready yet... retrying..."
            sleep 2
          done

      - name: Build Spring Boot jar without tests
        run: mvn clean package -DskipTests

      - name: Start Spring Boot app in background
        run: nohup java -jar target/*.jar --spring.profiles.active=ci &

      - name: Wait for Spring Boot to start
        run: |
          for i in {1..30}; do
            curl --fail http://localhost:8080/actuator/health && echo "App is up!" && break
            echo "Waiting for Spring Boot to start..."
            sleep 2
          done

      - name: Run health check endpoint
        run: curl --fail http://localhost:8080/actuator/health

      - name: Run tests with Maven
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
        run: mvn test -Dspring.profiles.active=ci

      - name: Upload Surefire test reports (always run, even on failure)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/
